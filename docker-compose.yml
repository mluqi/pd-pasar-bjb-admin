version: '3.8'

services:
  backend:
    build:
      context: ./server # Path ke direktori backend Anda
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Mapping port: <host_port>:<container_port>
    environment:
      NODE_ENV: development # atau production
      DATABASE_URL: mysql://userdb:passworddb@db:3306/namadatabase
      # Tambahkan variabel environment lain yang dibutuhkan backend Anda
    volumes:
      - ./server:/usr/src/app # Untuk hot-reloading selama development (opsional)
      - /usr/src/app/node_modules # Pastikan node_modules di container tidak dioverwrite
    depends_on:
      - db # Backend akan menunggu db siap (secara network, bukan aplikasi)
    restart: unless-stopped

  frontend:
    build:
      context: ./client # Path ke direktori frontend Anda
      dockerfile: Dockerfile
      args:
        # Sesuaikan dengan nama variabel yang Anda gunakan di Dockerfile frontend
        REACT_APP_API_URL: http://localhost:3001/api # URL backend yang diakses dari browser
    ports:
      - "3000:80" # Akses frontend dari browser via http://localhost:3000
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: mysql:8.0 # Gunakan versi MySQL yang Anda inginkan
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password_anda
      MYSQL_DATABASE: namadatabase
      MYSQL_USER: userdb
      MYSQL_PASSWORD: passworddb
    ports:
      # Opsional: mapping port DB ke host untuk akses langsung (misalnya dengan DBeaver/MySQL Workbench)
      - "33060:3306" # <host_port>:<container_port>
    volumes:
      - mysql_data:/var/lib/mysql # Menyimpan data MySQL secara persisten
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_data: # Mendefinisikan named volume untuk persistensi data MySQL